/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package berryclock;

import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Michi
 */
public class Clock extends javax.swing.JPanel implements Runnable, ComponentListener{

    private SimpleDateFormat sdf;
    private Date date;
    private Thread thread;
    private Gui gui;
    
    private Timer timer = new Timer();
    
    /**
     * Creates new form Clock
     */
    public Clock(Gui g) {
        initComponents();
        this.addComponentListener(this);
        gui = g;
        panelDrink.setVisible(false);
        panelDrink.addMouseListener(mouse);
        start();
    }
    
    private void setDate() {
        labelClock.setText(sdf.format(date));
    }
    
    public void start() {
        if (thread == null) {
            thread = new Thread(this);
            thread.start();
        }
    }
    
    public void run() {
        while(true) {
            date = new Date();
            sdf = new SimpleDateFormat("HH:mm:ss");
            setDate();
            try {
                Thread.sleep(1000);
            } catch (Exception e) {
            }
        }
    }
    
    private MouseListener mouse = new MouseListener() {
        @Override
        public void mouseClicked(MouseEvent e) {
            
        }

        @Override
        public void mousePressed(MouseEvent e) {
            
        }

        @Override
        public void mouseReleased(MouseEvent e) {
            panelDrink.setVisible(false);
            labelClock.setVisible(true);
            startDrink();
        }

        @Override
        public void mouseEntered(MouseEvent e) {
            
        }

        @Override
        public void mouseExited(MouseEvent e) {
            
        }
    };
    
    public synchronized void startDrink() { 
        this.timer.cancel();
        this.timer = new Timer();
        
        TimerTask action = new TimerTask() {
            @Override
            public void run() {
                labelClock.setVisible(false);
                panelDrink.setVisible(true);
                if(isWorkHour())
                    gui.blinkDisplay(500, 3);
                else
                    gui.dimmDisplay(0, 1);
            }
        };
        this.timer.schedule(action, 3600000); //60min
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelClock = new javax.swing.JLabel();
        panelDrink = new javax.swing.JPanel();
        labelDrink = new javax.swing.JLabel();
        iconDrink = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(255, 255, 255));
        setFocusable(false);
        setPreferredSize(new java.awt.Dimension(320, 240));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelClock.setBackground(new java.awt.Color(0, 0, 0));
        labelClock.setFont(new java.awt.Font("Oxygen", 0, 48)); // NOI18N
        labelClock.setForeground(new java.awt.Color(255, 255, 255));
        labelClock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelClock.setLabelFor(labelClock);
        labelClock.setText("Clock");
        labelClock.setFocusable(false);
        add(labelClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 240));

        panelDrink.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelDrink.setBackground(new java.awt.Color(0, 0, 0));
        labelDrink.setFont(new java.awt.Font("Oxygen", 0, 24)); // NOI18N
        labelDrink.setForeground(new java.awt.Color(255, 255, 255));
        labelDrink.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelDrink.setText("Trinken nicht vergessen!");
        labelDrink.setFocusable(false);
        labelDrink.setOpaque(true);
        panelDrink.add(labelDrink, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 0, 270, 240));

        iconDrink.setBackground(new java.awt.Color(0, 0, 0));
        iconDrink.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/water.png"))); // NOI18N
        iconDrink.setOpaque(true);
        panelDrink.add(iconDrink, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 50, 240));

        add(panelDrink, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconDrink;
    private javax.swing.JLabel labelClock;
    private javax.swing.JLabel labelDrink;
    private javax.swing.JPanel panelDrink;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentResized(ComponentEvent e) {
        
    }

    @Override
    public void componentMoved(ComponentEvent e) {
        
    }

    @Override
    public void componentShown(ComponentEvent e) {
        startDrink();
    }

    @Override
    public void componentHidden(ComponentEvent e) {
        this.timer.cancel();
    }
    
    private boolean isWorkHour() {
        if(Integer.parseInt(sdf.format(date).split(":")[0]) < 7 || Integer.parseInt(sdf.format(date).split(":")[0]) > 17)
            return false;
        else
            return true;
    }
}
